package thread;

/* 프로세스 : 실행 중인 프로그램
 * 프로세스 안에는 최소한 하나 이상의 쓰레드가 존재
 *  => 둘 이상의 쓰레드를 가진 프로세스를 멀티 쓰레드 프로세스라 함
 * 
 * 멀티 쓰레드 : 출력하는 작업을 두 개의 쓰레드가 처리
 * 
 * 멀티 쓰레드 장점
 *  - cpu 사용률 향상
 *  - 자원을 효율적으로 사용
 *  - 응답성이 향상
 *  - 작업이 분리되어 코드가 간결해짐
 *  => 분리할 수 있는, 상관 없는 작업일 때 멀티 쓰레드가 효율적임
 *  
 *  멀티 쓰레딩 필수 고려사항
 *   - 쓰레드간 작업 전환시간 소요
 *   - 동기화
 *   - 교착상태
 *   
 *  쓰레드 구현 방법
 *  1) Thread 클래스 상속
 *   - Thread 상속받고
 *   - run 메소드 오버라이드 - 그곳에 동시 동작 코드 작성
 *   - 같이 동작할 메소드에 인스턴스화, 인스턴스.start();
 *  
 *  2) Runnable 인터페이스 구현
 *   - Runnable 구현하고
 *   - run 메소드 오버라이드 - 그곳에 동시 동작 코드 작성
 *   - 같이 동작할 메소드에 인스턴스화, start 메소드는 없다.
 *   Thread t4 = new Thread(new 구현클래스());
 *   - t4.start();
 *   
 *  start() 메소드 : 실행 대기열에 인스턴스 저장
 *  setPriority(int i) : i가 클 수록 우선순위가 높다
 *  1<= i <=10
 *  main에서 생성한 쓰레드는 기본 우선순위 5
 *  
 *   - 동기화
 *  synchronized - 메소드 앞에 붙임
 *  한 쓰레드가 작업 진행중이면 다른 쓰레드 간섭을 막음
 */

public class A_note {

}
